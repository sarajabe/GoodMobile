# Copyright 2015 Google Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

events {
    worker_connections 768;
}

http {
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Logs will appear on the Google Developer's Console when logged to this
    # directory.
    access_log /var/log/app_engine/app.log;
    error_log /var/log/app_engine/app.log;

    gzip on;
    gzip_disable "msie6";

    include /etc/nginx/conf.d/cors-config;

    server {
      # Google App Engine expects the runtime to serve HTTP traffic from
      # port 8080.
      listen 8080;
      
      add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

      if ($http_x_forwarded_proto = "http") {
        return 301 https://$host$request_uri;
      }

      root /usr/share/nginx/www;
      index index.html index.htm;

      location / {
        if ($request_method = 'OPTIONS') {
          add_header 'Access-Control-Allow-Origin' $cors_origin;
          add_header 'Access-Control-Allow-Credentials' $cors_cred;
          add_header 'Access-Control-Allow-Headers' $cors_headers;
          add_header 'Access-Control-Allow-Methods' $cors_methods;
          add_header 'Access-Control-Max-Age' $cors_age;
          add_header 'Content-Type' $cors_content;
          add_header 'Content-Length' $cors_length;

          return 204;
        }
        add_header 'Access-Control-Allow-Origin' $cors_origin;
        add_header 'Access-Control-Allow-Credentials' $cors_cred;
        add_header 'Access-Control-Allow-Headers' $cors_headers;
        try_files $uri $uri/ /index.html;
      }

      #error_page  404              /404.html;
      # redirect server error pages to the static page /50x.html
      #
      error_page   500 502 503 504  /50x.html;
      location = /50x.html {
      root   /usr/share/nginx/www;
      }
    }
}